using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ICSharpCode.SharpZipLib.Zip;
using System.IO;

namespace TIGER_Reader
{
    class ZipFileManager
    {
        public static string ExtractFileByExtension(string zipFilename, string outputPath, string extension)
        {
            string outputFilename = string.Empty;

            using (ZipInputStream zipStream = new ZipInputStream(File.OpenRead(zipFilename)))
            {
                ZipEntry zipEntry;
                while ((zipEntry = zipStream.GetNextEntry()) != null)
                {
                    //string extension = Path.GetExtension(zipEntry.Name);

                    if (!zipEntry.Name.EndsWith("/") 
                        && Path.GetExtension(zipEntry.Name).Substring(1).Equals(extension, StringComparison.OrdinalIgnoreCase))
                    {
                        outputFilename = zipEntry.Name.Replace("/", @"\");
                        outputFilename = Path.Combine(outputPath, outputFilename);

                        using (FileStream streamWriter = File.Create(outputFilename))
                        {
                            byte[] data = new byte[zipEntry.Size];

                            long bytesRead = 0;
                            do
                            {
                                bytesRead = zipStream.Read(data, 0, data.Length);

                                if (bytesRead > 0)
                                {
                                    streamWriter.Write(data, 0, (int)bytesRead);
                                }

                            } while (bytesRead > 0);
                        }

                        break;
                    }
                }
            }

            return outputFilename;
        }
    }
}
